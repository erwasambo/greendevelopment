package com.green.development;

import java.io.ByteArrayOutputStream;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;
import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import com.green.development.GPSTracker;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.Animation.AnimationListener;

@SuppressLint("NewApi")
public class SurveyActivity extends Activity {

	EditText fullname;
	EditText address;
	EditText phone;
	EditText organization;
	EditText personresp;
	Spinner projarea;
	Switch ethanol;
	Switch biogas;
	Switch purwater;
	Button photoButton;
	Button signature;
	ProgressDialog dialog; 
	ConnectionDetector cd;
	//GPSTracker gps;
	
	private DataBaseManager DatabaseHelpers;
	private String table1 = "surveys";
	private String table2 = "Area";
	String image_resource;
	GPSTracker gps = new GPSTracker (SurveyActivity.this);
	SQLiteDatabase myDataBase;

	private static String KEY_SUCCESS = "success";
	private static final int CAMERA_REQUEST = 1888; 
    private ImageView imageView;
	
	UserFunctions funcs = new UserFunctions();
	
	ArrayList<String> projectareas = new ArrayList<String>();
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        
    	super.onCreate(savedInstanceState);
        setContentView(R.layout.survey);
        

        DatabaseHelpers = DataBaseManager.instance();
		
		myDataBase = DatabaseHelpers.getWritableDatabase();

    	fullname = (EditText) findViewById(R.id.editTextorga);
		address = (EditText) findViewById(R.id.editTextperson);
		phone = (EditText) findViewById(R.id.editTextphone);
		organization = (EditText) findViewById(R.id.organizationeditText1);
		personresp = (EditText) findViewById(R.id.personrespeditText2);
		projarea = (Spinner) findViewById(R.id.projareaSpinner1);
		ethanol = (Switch) findViewById(R.id.switchEthanolstv);
		biogas = (Switch) findViewById(R.id.switchBiogasstv);
		purwater = (Switch) findViewById(R.id.switchPurifiedwater);
		photoButton = (Button) this.findViewById(R.id.cap_button);
        signature = (Button) this.findViewById(R.id.btnSignature);
        imageView = (ImageView)this.findViewById(R.id.sceneImage);
        
        
        updateProjectAreas();

        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, projectareas);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		projarea.setAdapter(adapter);
		
        photoButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE); 
                startActivityForResult(cameraIntent, CAMERA_REQUEST); 
            }
        });
        
        signature.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {		
				/*if(gps.canGetLocation()){
					 
					double latitude = gps.
					getLatitude();
					double longitude = gps.getLongitude();
					
					
				}else{
					// can't get location
					gps.showSettingsAlert();
				}*/

	    		String dbfullname = fullname.getText().toString();
	    		String dbaddress = address.getText().toString();
	    		String dbphone = phone.getText().toString();
	    		String dborganization = organization.getText().toString();
	    		String dbpersonresp  = personresp.getText().toString();
	    		String dbprojarea = projarea.getSelectedItem().toString();
	    		String dbethanol = String.valueOf(ethanol.isChecked());
	    		String dbbiogas = String.valueOf(biogas.isChecked());
	    		String dbpurwater = String.valueOf(purwater.isChecked());

	        	ContentValues surveyvalues = new ContentValues();
 	
	        	surveyvalues.put("Name", dbfullname);
	        	surveyvalues.put("Address", dbaddress);
	        	surveyvalues.put("PhoneNumber", dbphone);
	        	surveyvalues.put("Organization", dborganization);
	        	surveyvalues.put("PersfillingForm", dbpersonresp);
	        	surveyvalues.put("CDMProjectArea", dbprojarea);
	        	surveyvalues.put("EthanolStv", dbethanol);
	        	surveyvalues.put("BiogasStv", dbbiogas);
	        	surveyvalues.put("PurifiedWat", dbpurwater);
	        	
	        	//myDataBase.update("pendingsurveys", surveyvalues, null, null);
	        	Log.e("Name", "****************value**************** is "+dbfullname);
	        	Log.e("Address", "****************value**************** is "+dbaddress);
	        	Log.e("PhoneNumber", "****************value**************** is "+dbphone);
	        	Log.e("Organization", "****************value**************** is "+dborganization);
	        	Log.e("PersfillingForm", "****************value**************** is "+dbpersonresp);
	        	Log.e("CDMProjectArea", "****************value**************** is "+dbprojarea);
	        	Log.e("EthanolStv", "****************value**************** is "+dbethanol);
	        	Log.e("BiogasStv", "****************value**************** is "+dbbiogas);
	        	Log.e("PurifiedWat", "****************value**************** is "+dbpurwater);
	        	
	        	
	        	if(dbfullname.isEmpty() || dbaddress.isEmpty() || dbphone.isEmpty() || dborganization.isEmpty()){
	        		Toast.makeText(getApplicationContext(), "Please Fill All Fields Before Proceeding", Toast.LENGTH_SHORT).show();
	        	}
	        	else{
	        	
					myDataBase.insert("pendingsurveys", null, surveyvalues);
					 
					
					Animation animation = AnimationUtils.loadAnimation( SurveyActivity.this, R.anim.fade_out );
					animation.setAnimationListener( new AnimationListener()	{				
						@Override
						public void onAnimationStart( Animation animation ) {}
						
						@Override
						public void onAnimationRepeat( Animation animation ) {}
						
						@Override
						public void onAnimationEnd( Animation animation ){
							signature.setVisibility( View.INVISIBLE );
							startActivity( new Intent( SurveyActivity.this, SurveySuccessActivity.class ) );
							overridePendingTransition( R.anim.slide_in_left, R.anim.slide_out_left );
						}
					} );
					
					//startActivity(new Intent("com.green.development.surveysuccess"));
					signature.startAnimation(animation);	
				
	        	}
	        	
	        	
			}
			
        });
        
	}


   


	private void updateProjectAreas() {
		Cursor cursor = DatabaseHelpers.select("SELECT CDMProjectArea FROM Area");

        if (cursor == null){
            cursor.close();
        }

        while (cursor.moveToNext()){
        	String s = cursor.getString(0);
        	projectareas.add(s);
       }

        cursor.close();
		
	}

	protected void onActivityResult(int requestCode, int resultCode, Intent data) {  
        if (requestCode == CAMERA_REQUEST && resultCode == RESULT_OK) {  
            Bitmap photo = (Bitmap) data.getExtras().get("data"); 
            imageView.setImageBitmap(photo);
        }  
    } 

    public void getData(){

    	ImageView sceneImage = (ImageView) findViewById(R.id.sceneImage);
    	
    	//Converts the whole ImageView layout into a Bitmap
    	BitmapDrawable drawable = (BitmapDrawable) sceneImage.getDrawable();
    	Bitmap bitmap = drawable.getBitmap();
    	
    	ByteArrayOutputStream stream = new ByteArrayOutputStream();
    	bitmap.compress(Bitmap.CompressFormat.PNG, 90, stream);
    	
    	byte [] byte_arr = stream.toByteArray();    	
    	

    	image_resource = Base64.encodeBytes(byte_arr);

    }  
	
}
