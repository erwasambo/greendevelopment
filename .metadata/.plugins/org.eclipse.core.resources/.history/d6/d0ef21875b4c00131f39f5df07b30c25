package com.green.development;

import java.io.ByteArrayOutputStream;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;
import android.content.ContentValues;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import com.green.development.GPSTracker;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.Animation.AnimationListener;

@SuppressLint("NewApi")
public class SurveyActivity extends Activity {

	EditText fullname;
	EditText address;
	EditText phone;
	EditText organization;
	EditText personresp;
	Spinner projarea;
	Switch ethanol;
	Switch biogas;
	Switch purwater;
	Button photoButton;
	Button signature;
	ProgressDialog dialog; 
	ConnectionDetector cd;
	//GPSTracker gps;
	
	private DataBaseManager DatabaseHelpers;
	private String table1 = "surveys";
	private String table2 = "Area";
	String image_resource;
	GPSTracker gps = new GPSTracker (SurveyActivity.this);
	SQLiteDatabase myDataBase;

	private static String KEY_SUCCESS = "success";
	private static final int CAMERA_REQUEST = 1888; 
    private ImageView imageView;
	
	UserFunctions funcs = new UserFunctions();
	
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        
    	super.onCreate(savedInstanceState);
        setContentView(R.layout.survey);
        

        DatabaseHelpers = DataBaseManager.instance();
		
		myDataBase = DatabaseHelpers.getWritableDatabase();
		
        photoButton = (Button) this.findViewById(R.id.cap_button);
        signature = (Button) this.findViewById(R.id.btnSignature);
        imageView = (ImageView)this.findViewById(R.id.sceneImage);
        
        
		Spinner spinner = (Spinner) findViewById(R.id.projareaSpinner1);
		ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
		        R.array.speed, android.R.layout.simple_spinner_item);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		spinner.setAdapter(adapter);
		
        photoButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE); 
                startActivityForResult(cameraIntent, CAMERA_REQUEST); 
            }
        });
        
        signature.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {		
				/*if(gps.canGetLocation()){
					 
					double latitude = gps.getLatitude();
					double longitude = gps.getLongitude();
					
					
				}else{
					// can't get location
					gps.showSettingsAlert();
				}*/
				
				DataBaseManager DatabaseHelpers2 = DataBaseManager.instance();
	        	SQLiteDatabase db = DatabaseHelpers2.getWritableDatabase();
	        	fullname = (EditText) findViewById(R.id.editTextfullname);
	    		address = (EditText) findViewById(R.id.editTextaddress);
	    		phone = (EditText) findViewById(R.id.editTextphone);
	    		organization = (EditText) findViewById(R.id.organizationeditText1);
	    		personresp = (EditText) findViewById(R.id.personrespeditText2);
	    		projarea = (Spinner) findViewById(R.id.projareaSpinner1);
	    		ethanol = (Switch) findViewById(R.id.switchEthanolstv);
	    		biogas = (Switch) findViewById(R.id.switchBiogasstv);
	    		purwater = (Switch) findViewById(R.id.switchPurifiedwater);
	           
	        	
	        	
	        	EditText address;
	        	EditText phone;
	        	EditText organization;
	        	EditText personresp;
	        	Spinner projarea;
	        	Switch ethanol;
	        	Switch biogas;
	        	Switch purwater;
	        	
	        	
	        	
	        	
	        	Spinner spinner2 = (Spinner) findViewById(R.id.spinner1);
	        	String speed= spinner2.getSelectedItem().toString();
	        	String  speedcolumn = "speed";
	        	ContentValues surveyvalues = new ContentValues();
	        	//Map<Integer,Integer> speedcharCounter=new HashMap<Integer,Integer>();
	        	int speedin;
	        	 Log.e("Speed", "****************selected item in spin is**************** is "+speed);
	        	 String currentvalue = speed.replace(" Seconds", "000");
	        	 Log.e("Speed", "****************selected item in spin is**************** is "+currentvalue);
	        	
	        	
	        	
	        	maelewanovalues.put(speedcolumn, currentvalue);
	        	db.update(table21, maelewanovalues, null, null);
				
				
				
				
				Animation animation = AnimationUtils.loadAnimation( SurveyActivity.this, R.anim.fade_out );
				animation.setAnimationListener( new AnimationListener()	{				
					@Override
					public void onAnimationStart( Animation animation ) {}
					
					@Override
					public void onAnimationRepeat( Animation animation ) {}
					
					@Override
					public void onAnimationEnd( Animation animation ){
						signature.setVisibility( View.INVISIBLE );
						startActivity( new Intent( SurveyActivity.this, SurveySuccessActivity.class ) );
						overridePendingTransition( R.anim.slide_in_left, R.anim.slide_out_left );
					}
				} );
				
				//startActivity(new Intent("com.green.development.surveysuccess"));
				signature.startAnimation(animation);	
				
			}
			
        });
        
	}


   


	protected void onActivityResult(int requestCode, int resultCode, Intent data) {  
        if (requestCode == CAMERA_REQUEST && resultCode == RESULT_OK) {  
            Bitmap photo = (Bitmap) data.getExtras().get("data"); 
            imageView.setImageBitmap(photo);
        }  
    } 

    public void getData(){

    	ImageView sceneImage = (ImageView) findViewById(R.id.sceneImage);
    	
    	//Converts the whole ImageView layout into a Bitmap
    	BitmapDrawable drawable = (BitmapDrawable) sceneImage.getDrawable();
    	Bitmap bitmap = drawable.getBitmap();
    	
    	ByteArrayOutputStream stream = new ByteArrayOutputStream();
    	bitmap.compress(Bitmap.CompressFormat.PNG, 90, stream);
    	
    	byte [] byte_arr = stream.toByteArray();    	
    	

    	image_resource = Base64.encodeBytes(byte_arr);

    }
    
    

	public static String getArea(){
		DataBaseManager DatabaseHelpers2 = DataBaseManager.instance();
		SQLiteDatabase db3 = DatabaseHelpers2.getReadableDatabase();

		String Sql = "SELECT CDMProjectArea FROM Area";
		Cursor cursor = DatabaseHelpers2.select(Sql);
		String value = "All";
		if (cursor == null){
			cursor.close();
		}
		if (cursor.getCount()==1){
			cursor.moveToFirst();
			 value = cursor.getString(0);
			 Log.e("Speed", "***********Speed in db********************* is "+value);
		}else{
		while (cursor.moveToNext()){
			value= cursor.getString(0);
			 Log.e("Speed", "***********Speed in db********************* is "+value);
		}
		}
		cursor.close();
	return value;
	}
    
   
	
}
